# -*- coding: utf-8 -*-
"""Unit3_Python_Advanced_Pandas_DataWrangling_Assignment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QlpZLLoj_PBhT4JlVlGxWnPsLgKBbKWF

<a href="https://colab.research.google.com/github/niteen11/lagcc_data_analytics_micro_credential/blob/master/Unit%203%20-%20Python%20Advanced/Assignments/Unit3_Python_Advanced_Pandas_DataWrangling_Assignment.ipynb" target="_parent"><img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"/></a>

# Assignment 1 : Python Data Analysis using salaries dataset

# Data Exploration:  This should include summary statistics, means, medians, quartiles, or any other relevant information about the data set.
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd 
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline

df = pd.read_csv('https://raw.githubusercontent.com/CunyLaguardiaDataAnalytics/datasets/master/Salaries.csv')

type(df)

# 397 rows = 397 employees
df.shape

df.head()

df.tail()

df.describe()

"""# Mean/median of all salaries"""

# Mean of all salaries
salaries = df['salary']
round(salaries.mean(),2)

# Median of all salaries
salaries.median()

"""# Median salary between gender and/or rank(title) Etc...

Making a new Data Frame that only has the columns 'sex' and 'salary'
"""

new_Data_Frame = df[['sex', 'salary']]
new_Data_Frame





"""Finding the Median salary for all males"""

def finding_median(sex, type, data = new_Data_Frame):
  x = new_Data_Frame['sex'] == sex
  wrangling_data = new_Data_Frame[x]
  if type == 'median' :
    median_salary = wrangling_data['salary'].median()
    return median_salary
  elif type == 'mean' :
    mean_salary = wrangling_data['salary'].mean()
    return mean_salary

#find median salary for all males
male_median = finding_median('Male','median')
male_median





"""Finding the Median salary for all females"""

female_median_salary = finding_median('Female', 'median')
female_median_salary









"""Comparing the Mean salary of Males and Females"""

FM_comparison = finding_median('Female', 'mean') < finding_median('Male','mean')

if FM_comparison:
  print('Oops, the average salary for all males is greater the one for all females')
else:
  print('Oh, the average salary for all females is greater the average for all males')

# The difference between mean salaries of male and female
The salary for all males is greater than the salary for all female on average

"""# Data Wrangling â€“ perform some basic transformations on the data

People who have 20 years of experience (Total: 157), (Mean Salary: 122,520.66)
"""

df.head(3)

twenty_years_exp = df['yrs.service'] == 20
new_df1 = df[twenty_years_exp]
print(new_df1.shape[0])
new_df1['salary'].mean()



"""Comparing the salaries of people who have 20+  years of experience vs less than 20 years of experience"""

#salaries of people who have 20+ years of experience
twenty_years_plus_exp=df['yrs.service']>=20
new_df2=df[twenty_years_plus_exp]
print(new_Data_Frame.shape[0])
new_df2['salary'].mean()

#salaries of people who have less than 20 years of experience
twenty_years_less_exp=df['yrs.service']<20
new_df3=df[twenty_years_less_exp]
print(new_df3.shape[0])
new_df3['salary'].mean()

#make comparison
average_comparison = new_df3['salary'].mean()<new_df2['salary'].mean()
if average_comparison:
  print('less experience, less money')
else:
  print('more experience, more money')

"""People who have salary of greater than or equal to 200,000"""

salary_200K_makers = df['salary']>= 200000
new_df4=df[salary_200K_makers]
new_df4



"""Your Findings here...

# Rename values, subset columns, etc
"""

df.head(5)

df.drop('Unnamed: 0', axis=1, inplace=True)
df.columns

"""# Create some simple visualizations showing some simple statistics"""

df.dtypes

df['sex'] = pd.Categorical(df['sex'], ordered=False)
df['discipline'] = pd.Categorical(df['discipline'], ordered=False)
df['rank'] = pd.Categorical(df['rank'], ordered=False)
df.dtypes

df.rename(
    columns = {
        "yrs.service": "experience_years"
    },
    inplace=True
)
df.columns

"""Your observations from the visuals: """

df.describe

"""# Draw some conclusions based on the data.  What did you discover?

Based on the analysis performed above, the conclusions are as follows:

Your Findings here...



I also discovered that the -

 Your Findings here...
"""